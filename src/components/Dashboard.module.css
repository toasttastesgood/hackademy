.dashboard {
  max-width: 800px;
  width: 100%; 
  margin: 0 auto;
}

.progressContainer {
  display: flex;
  justify-content: center;
  margin: var(--space-xl) 0;
}

/* Removed .circularProgress, .circularProgress circle, and .progressText rules */
/* Size and stroke are controlled by props in CircularProgress component */
/* Percentage text is styled within CircularProgress component */

.recommendedCategories h2 {
  text-align: center;
  margin-bottom: var(--space-lg);
}

.categoryList {
  display: flex;
  flex-direction: column;
  /* Removed gap, using border instead */
  padding: 0; /* Let Card handle padding */
  margin: 0; /* Let Card handle margin */
}

.categoryItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-md); /* Use consistent padding */
  /* border-radius removed, Card handles rounding */
  transition: background-color var(--duration-fast) var(--ease-in-out);
  border-bottom: var(--border-width-base) solid var(--border-primary); /* Add separator */
}

.categoryItem:last-child {
  border-bottom: none; /* Remove border for the last item */
  border-bottom: none; /* Remove border for the last item */
} /* Added missing closing brace */

.categoryItem:hover {
  background-color: var(--bg-accent); /* Use standard accent background for hover */
}

.categoryItemInfo {
  flex-grow: 1;
  margin-right: var(--space-md);
}

.categoryItem h3 {
  margin-bottom: var(--space-xs);
  color: var(--text-primary); /* Use primary text color */
  font-size: var(--font-size-base);
}

.categoryItem span {
  font-size: var(--font-size-sm);
  color: var(--text-secondary); /* Use secondary text color */
}

.emptyState {
  padding: var(--space-lg) var(--space-md);
  text-align: center;
  color: var(--text-secondary);
  font-style: italic;
}