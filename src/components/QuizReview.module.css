/* Base styles for the review page container */
.quizReview {
  max-width: var(--container-max-width, 800px); /* Use global variable */
  width: 100%;
  margin: 0 auto var(--space-xl); /* Add bottom margin */
  position: relative;
  padding-bottom: calc(var(--space-xl) * 2 + 40px); /* Space for fixed button */
}

.quizReview h1 {
  text-align: center;
  margin-bottom: var(--space-lg);
  /* Color inherited from global h1 */
}

/* Class applied to the summary Card */
.summary {
  text-align: center;
  /* Card component handles bg, padding, border, shadow */
}

.summary h2 {
  /* Use accent color for score heading */
  color: var(--text-accent);
  font-size: var(--font-size-xl); /* Make score stand out */
  margin-bottom: var(--space-sm);
}

/* Container for all the question review cards */
.questionsReview {
  display: flex;
  flex-direction: column;
  gap: var(--space-lg);
  margin-top: var(--space-xl); /* Add space after summary */
}

/* Class applied to each question review Card */
.reviewQuestion {
  position: relative; /* Needed for absolute positioning of toggle */
  overflow: hidden; /* Contain borders/pseudo-elements */
  /* Card component handles bg, padding, border, shadow */
  /* Left border is applied by resultCorrect/resultIncorrect */
}

/* Left border indicators */
.resultCorrect {
  border-left: var(--border-width-thick) solid var(--success-color);
}

.resultIncorrect {
  border-left: var(--border-width-thick) solid var(--error-color);
}

/* Style the explanation toggle button */
.explanationToggle {
  position: absolute;
  top: var(--space-md);
  right: var(--space-md);
  background-color: var(--button-outline-bg);
  color: var(--button-outline-text);
  border: var(--border-width-base) solid var(--button-outline-border);
  border-radius: var(--border-radius-full);
  width: 32px; /* Adjust size */
  height: 32px; /* Adjust size */
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  line-height: 1; /* Center the '?' */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: var(--transition-all);
  z-index: var(--z-index-content); /* Ensure it's above other content */
  box-shadow: var(--button-outline-shadow, none); /* Apply base shadow */
}

.explanationToggle:hover {
  background-color: var(--button-outline-hover-bg);
  transform: scale(1.1);
  box-shadow: var(--button-outline-shadow, none); /* Keep base shadow on hover */
}
.explanationToggle:active {
  transform: scale(0.95);
  box-shadow: var(--button-outline-active-shadow, none); /* Apply active shadow */
}

/* Question heading inside the review card */
.reviewQuestion h3 {
  margin-bottom: var(--space-md);
  padding-right: 40px; /* Ensure heading doesn't overlap button */
  font-size: var(--font-size-md);
  color: var(--text-primary); /* Use primary text color */
  font-weight: var(--font-weight-semibold);
}

/* Style the question text */
.questionText {
  margin-bottom: var(--space-lg); /* Add space below question text */
  color: var(--text-primary); /* Ensure primary text color */
  line-height: var(--line-height-relaxed);
}

/* Style the list of options */
.optionsList {
  list-style: none;
  padding: 0;
  margin: var(--space-md) 0; /* Add some margin */
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

/* Base style for each option item */
.optionItem {
  padding: var(--space-sm) var(--space-md);
  border: var(--border-width-base) solid var(--border-secondary);
  border-radius: var(--border-radius-md);
  background-color: var(--bg-secondary); /* Default background */
  color: var(--text-secondary); /* Default text color */
  transition: var(--transition-colors);
  position: relative; /* For potential pseudo-elements */
}

/* Style for the option the user selected AND was correct */
.optionSelectedCorrect {
  border-color: var(--success-color);
  background-color: color-mix(in srgb, var(--success-color) 15%, transparent);
  color: var(--text-success);
  font-weight: var(--font-weight-medium);
}

/* Style for the option the user selected BUT was incorrect */
.optionSelectedIncorrect {
  border-color: var(--error-color);
  background-color: color-mix(in srgb, var(--error-color) 15%, transparent);
  color: var(--text-error);
  font-weight: var(--font-weight-medium);
  text-decoration: line-through; /* Indicate it's wrong */
}

/* Style for the correct option that the user DID NOT select */
.optionCorrectUnselected {
  border-color: var(--success-color);
  /* Optional: Add a subtle background or keep it default */
  /* background-color: color-mix(in srgb, var(--success-color) 5%, transparent); */
  color: var(--text-success); /* Highlight the text */
}

/* Fallback styles for non-MCQ answers */
.answerDetails {
  margin-top: var(--space-md);
  padding: var(--space-sm) var(--space-md);
  background: var(--bg-accent);
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  border-left: var(--border-width-thick) solid var(--border-secondary);
}
.answerDetails p {
  margin-bottom: var(--space-xs);
}
.answerDetails strong {
  color: var(--text-primary);
}

/* Explanation box (conditionally shown) */
.explanation {
  margin-top: var(--space-lg); /* More space before explanation */
  padding: var(--space-md); /* More padding */
  background: var(--bg-accent);
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-base); /* Slightly larger explanation text */
  color: var(--text-secondary);
  border-left: var(--border-width-thick) solid var(--border-accent); /* Use accent border */
}
.explanation h4 {
    margin-bottom: var(--space-sm);
    font-size: var(--font-size-base);
    color: var(--text-accent);
    font-weight: var(--font-weight-medium);
}
.explanation p {
    margin-bottom: 0; /* Remove default p margin inside explanation */
    line-height: var(--line-height-relaxed);
}

/* Positioning for the return button (styling handled by Button component) */
.returnBtn {
  position: fixed;
  right: var(--space-xl); /* Use spacing variable */
  bottom: var(--space-xl); /* Use spacing variable */
  z-index: var(--z-index-sticky); /* Use z-index variable */
  /* Font size, colors, etc., are handled by the Button component styles */
  /* Remove fixedReturnBtn class if it only duplicated these */
}